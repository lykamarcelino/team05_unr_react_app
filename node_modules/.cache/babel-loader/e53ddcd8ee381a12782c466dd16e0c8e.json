{"ast":null,"code":"'use strict';\n\nvar isExtendable = require('is-extendable');\n\nvar forIn = require('for-in');\n\nfunction mixinDeep(target, objects) {\n  var len = arguments.length,\n      i = 0;\n\n  while (++i < len) {\n    var obj = arguments[i];\n\n    if (isObject(obj)) {\n      forIn(obj, copy, target);\n    }\n  }\n\n  return target;\n}\n/**\r\n * Copy properties from the source object to the\r\n * target object.\r\n *\r\n * @param  {*} `val`\r\n * @param  {String} `key`\r\n */\n\n\nfunction copy(val, key) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  var obj = this[key];\n\n  if (isObject(val) && isObject(obj)) {\n    mixinDeep(obj, val);\n  } else {\n    this[key] = val;\n  }\n}\n/**\r\n * Returns true if `val` is an object or function.\r\n *\r\n * @param  {any} val\r\n * @return {Boolean}\r\n */\n\n\nfunction isObject(val) {\n  return isExtendable(val) && !Array.isArray(val);\n}\n/**\r\n * Returns true if `key` is a valid key to use when extending objects.\r\n *\r\n * @param  {String} `key`\r\n * @return {Boolean}\r\n */\n\n\nfunction isValidKey(key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n\n;\n/**\r\n * Expose `mixinDeep`\r\n */\n\nmodule.exports = mixinDeep;","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/mixin-deep/index.js"],"names":["isExtendable","require","forIn","mixinDeep","target","objects","len","arguments","length","i","obj","isObject","copy","val","key","isValidKey","Array","isArray","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAnB;;AAEA,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AAClC,MAAIC,GAAG,GAAGC,SAAS,CAACC,MAApB;AAAA,MAA4BC,CAAC,GAAG,CAAhC;;AACA,SAAO,EAAEA,CAAF,GAAMH,GAAb,EAAkB;AAChB,QAAII,GAAG,GAAGH,SAAS,CAACE,CAAD,CAAnB;;AACA,QAAIE,QAAQ,CAACD,GAAD,CAAZ,EAAmB;AACjBR,MAAAA,KAAK,CAACQ,GAAD,EAAME,IAAN,EAAYR,MAAZ,CAAL;AACD;AACF;;AACD,SAAOA,MAAP;AACD;AAED;;;;;;;;;AAQA,SAASQ,IAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,MAAI,CAACC,UAAU,CAACD,GAAD,CAAf,EAAsB;AACpB;AACD;;AAED,MAAIJ,GAAG,GAAG,KAAKI,GAAL,CAAV;;AACA,MAAIH,QAAQ,CAACE,GAAD,CAAR,IAAiBF,QAAQ,CAACD,GAAD,CAA7B,EAAoC;AAClCP,IAAAA,SAAS,CAACO,GAAD,EAAMG,GAAN,CAAT;AACD,GAFD,MAEO;AACL,SAAKC,GAAL,IAAYD,GAAZ;AACD;AACF;AAED;;;;;;;;AAOA,SAASF,QAAT,CAAkBE,GAAlB,EAAuB;AACrB,SAAOb,YAAY,CAACa,GAAD,CAAZ,IAAqB,CAACG,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAA7B;AACD;AAED;;;;;;;;AAOA,SAASE,UAAT,CAAoBD,GAApB,EAAyB;AACvB,SAAOA,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,aAA/B,IAAgDA,GAAG,KAAK,WAA/D;AACD;;AAAA;AAED;;;;AAIAI,MAAM,CAACC,OAAP,GAAiBhB,SAAjB","sourcesContent":["'use strict';\r\n\r\nvar isExtendable = require('is-extendable');\r\nvar forIn = require('for-in');\r\n\r\nfunction mixinDeep(target, objects) {\r\n  var len = arguments.length, i = 0;\r\n  while (++i < len) {\r\n    var obj = arguments[i];\r\n    if (isObject(obj)) {\r\n      forIn(obj, copy, target);\r\n    }\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * Copy properties from the source object to the\r\n * target object.\r\n *\r\n * @param  {*} `val`\r\n * @param  {String} `key`\r\n */\r\n\r\nfunction copy(val, key) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n\r\n  var obj = this[key];\r\n  if (isObject(val) && isObject(obj)) {\r\n    mixinDeep(obj, val);\r\n  } else {\r\n    this[key] = val;\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if `val` is an object or function.\r\n *\r\n * @param  {any} val\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isObject(val) {\r\n  return isExtendable(val) && !Array.isArray(val);\r\n}\r\n\r\n/**\r\n * Returns true if `key` is a valid key to use when extending objects.\r\n *\r\n * @param  {String} `key`\r\n * @return {Boolean}\r\n */\r\n\r\nfunction isValidKey(key) {\r\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\r\n};\r\n\r\n/**\r\n * Expose `mixinDeep`\r\n */\r\n\r\nmodule.exports = mixinDeep;\r\n"]},"metadata":{},"sourceType":"script"}