{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liliana\\\\Documents\\\\AFinalUpdate\\\\team05_unr_react_app\\\\src\\\\components\\\\reportComponents\\\\SubmitReportToBack.js\";\nimport React from \"react\";\nexport default class SubmitReportToBack extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphName: this.props.graphName,\n      graphType: this.props.graphType,\n      predictionType: this.props.predictionType,\n      itemORcustomerName: this.props.itemORcustomerName,\n      dates: this.props.dates,\n      dataLabel: this.props.dataLabel,\n      data: this.props.data,\n      colors: this.props.colors,\n      xAxisLabel: this.props.xAxisLabel,\n      yAxisLabel: this.props.yAxisLabel,\n      transactionData: this.props.transactionData,\n      customerInfo: this.props.customerInfo,\n      inventoryInfo: this.props.inventoryInfo,\n      graph: this.props.graph,\n      gridlines: this.props.gridlines,\n      response: \"\",\n      fetchDone: false\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/getMakeReport', {\n      method: 'GET',\n      headers: {\n        'graphName': this.props.graphName,\n        'graphType': this.props.graphType,\n        'predictionType': this.props.predictionType,\n        'itemORcustomerName': this.props.itemORcustomerName,\n        'dates': this.props.dates,\n        'dataLabel': this.props.dataLabel,\n        'data': this.props.data,\n        'colors': this.props.colors,\n        'xAxisLabel': this.props.xAxisLabel,\n        'yAxisLabel': this.props.yAxisLabel,\n        'transactionData': this.props.transactionData,\n        'customerInfo': this.props.customerInfo,\n        'inventoryInfo': this.props.inventoryInfo,\n        'graph': this.props.graph,\n        'gridlines': this.props.gridlines\n      }\n    }).then(res => res.json()).then(jsonResponse => {\n      this.setState({\n        response: jsonResponse.response\n      });\n      console.log(\"fetch was done\");\n      console.log(this.state);\n      this.setState({\n        fetchDone: true\n      });\n    }).catch(function (error) {\n      console.log('There has been a problem with your fetch operation: ' + error.message);\n      throw error;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.fetchDone && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"response\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Liliana/Documents/AFinalUpdate/team05_unr_react_app/src/components/reportComponents/SubmitReportToBack.js"],"names":["React","SubmitReportToBack","Component","constructor","props","state","graphName","graphType","predictionType","itemORcustomerName","dates","dataLabel","data","colors","xAxisLabel","yAxisLabel","transactionData","customerInfo","inventoryInfo","graph","gridlines","response","fetchDone","componentDidMount","fetch","method","headers","then","res","json","jsonResponse","setState","console","log","catch","error","message","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nexport default class SubmitReportToBack extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            graphName: this.props.graphName,\r\n            graphType: this.props.graphType,\r\n            predictionType: this.props.predictionType,\r\n            itemORcustomerName: this.props.itemORcustomerName,\r\n            dates: this.props.dates,\r\n            dataLabel: this.props.dataLabel,\r\n            data: this.props.data,\r\n            colors: this.props.colors,\r\n            xAxisLabel: this.props.xAxisLabel,\r\n            yAxisLabel: this.props.yAxisLabel,\r\n\r\n            transactionData: this.props.transactionData,\r\n            customerInfo: this.props.customerInfo,\r\n            inventoryInfo: this.props.inventoryInfo,\r\n            graph: this.props.graph,\r\n            gridlines: this.props.gridlines,\r\n\r\n            response: \"\",\r\n            fetchDone: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:8080/getMakeReport', {\r\n            method: 'GET',\r\n            headers: {\r\n                'graphName': this.props.graphName,\r\n                'graphType': this.props.graphType,\r\n                'predictionType': this.props.predictionType,\r\n                'itemORcustomerName': this.props.itemORcustomerName,\r\n                'dates': this.props.dates,\r\n                'dataLabel': this.props.dataLabel,\r\n                'data': this.props.data,\r\n                'colors': this.props.colors,\r\n                'xAxisLabel': this.props.xAxisLabel,\r\n                'yAxisLabel': this.props.yAxisLabel,\r\n\r\n                'transactionData': this.props.transactionData,\r\n                'customerInfo': this.props.customerInfo,\r\n                'inventoryInfo': this.props.inventoryInfo,\r\n                'graph': this.props.graph,\r\n                'gridlines': this.props.gridlines,\r\n            }})\r\n            .then(res => res.json())\r\n            .then(jsonResponse => {\r\n                this.setState({\r\n                    response: jsonResponse.response,\r\n                })\r\n                console.log(\"fetch was done\")\r\n                console.log(this.state)\r\n                this.setState({fetchDone: true})\r\n            })\r\n            .catch(function(error) {\r\n                console.log('There has been a problem with your fetch operation: ' + error.message);\r\n                throw error;\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.fetchDone && <div>response</div>}\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}