{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lykam\\\\Desktop\\\\Senior Project\\\\team05_unr_react_app\\\\src\\\\pages\\\\Connected.js\";\n\n/*\r\n*   Name: Connected.js\r\n*   Description: Connected Page for the application, will display the Home page upon entering\r\n*   Used to get Query params and authenticate in the backend\r\n*   Date: 05/02/2020\r\n*   Author: Lyka Marcelino\r\n* */\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SideBar from \"../components/SideBar\";\nconst urlParams = window.location; //Function used to get the query parameters after logging in\n//Used a regex to split the different parameters in the URL\n\nfunction getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n} //Variables used to stare the code, state, and realmID to pass to the backend\n\n\nvar code = getParameterByName('code', urlParams);\nvar state = getParameterByName('state', urlParams);\nvar realmId = getParameterByName('realmId', urlParams);\n\nfunction fetchData() {\n  fetch('http://localhost:8080/oauth', {\n    method: 'GET',\n    headers: {\n      'code': code,\n      'state': state,\n      'realmId': realmId\n    }\n  }).then(res => res.json()).catch(function (err) {\n    return err;\n  });\n}\n\nfetchData(); //Close the window and load the main page\n\nif (window.opener) {\n  window.opener.location.href = '/connected';\n  window.close();\n}\n\nexport class Connected extends React.Component {\n  render() {\n    return React.createElement(SideBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_unr_react_app/src/pages/Connected.js"],"names":["React","SideBar","urlParams","window","location","getParameterByName","name","url","href","replace","regex","RegExp","results","exec","decodeURIComponent","code","state","realmId","fetchData","fetch","method","headers","then","res","json","catch","err","opener","close","Connected","Component","render"],"mappings":";;AAAA;;;;;;;AAQA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,MAAMC,SAAS,GAAGC,MAAM,CAACC,QAAzB,C,CAEA;AACA;;AACA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,GAAlC,EAAuC;AACnC,MAAI,CAACA,GAAL,EAAUA,GAAG,GAAGJ,MAAM,CAACC,QAAP,CAAgBI,IAAtB;AACVF,EAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuB,MAAvB,CAAP;AACA,MAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAW,SAASL,IAAT,GAAgB,mBAA3B,CAAZ;AAAA,MACIM,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAWN,GAAX,CADd;AAEA,MAAI,CAACK,OAAL,EAAc,OAAO,IAAP;AACd,MAAI,CAACA,OAAO,CAAC,CAAD,CAAZ,EAAiB,OAAO,EAAP;AACjB,SAAOE,kBAAkB,CAACF,OAAO,CAAC,CAAD,CAAP,CAAWH,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,CAAD,CAAzB;AACH,C,CAED;;;AACA,IAAIM,IAAI,GAAGV,kBAAkB,CAAC,MAAD,EAASH,SAAT,CAA7B;AACA,IAAIc,KAAK,GAAGX,kBAAkB,CAAC,OAAD,EAAUH,SAAV,CAA9B;AACA,IAAIe,OAAO,GAAGZ,kBAAkB,CAAC,SAAD,EAAYH,SAAZ,CAAhC;;AAEA,SAASgB,SAAT,GACA;AACIC,EAAAA,KAAK,CAAC,6BAAD,EAAgC;AAACC,IAAAA,MAAM,EAAE,KAAT;AAAgBC,IAAAA,OAAO,EAAC;AAAC,cAASN,IAAV;AAAgB,eAASC,KAAzB;AAAgC,iBAAWC;AAA3C;AAAxB,GAAhC,CAAL,CACKK,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKC,KAFL,CAEW,UAAUC,GAAV,EAAe;AACtB,WAAOA,GAAP;AACC,GAJL;AAKH;;AAEDR,SAAS,G,CAET;;AACA,IAAGf,MAAM,CAACwB,MAAV,EAAkB;AACdxB,EAAAA,MAAM,CAACwB,MAAP,CAAcvB,QAAd,CAAuBI,IAAvB,GAA8B,YAA9B;AACAL,EAAAA,MAAM,CAACyB,KAAP;AACH;;AAED,OAAO,MAAMC,SAAN,SAAwB7B,KAAK,CAAC8B,SAA9B,CAAwC;AAC3CC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAL0C","sourcesContent":["/*\r\n*   Name: Connected.js\r\n*   Description: Connected Page for the application, will display the Home page upon entering\r\n*   Used to get Query params and authenticate in the backend\r\n*   Date: 05/02/2020\r\n*   Author: Lyka Marcelino\r\n* */\r\n\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SideBar from \"../components/SideBar\";\r\n\r\nconst urlParams = window.location;\r\n\r\n//Function used to get the query parameters after logging in\r\n//Used a regex to split the different parameters in the URL\r\nfunction getParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    name = name.replace(/[[\\]]/g, '\\\\$&');\r\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\n//Variables used to stare the code, state, and realmID to pass to the backend\r\nvar code = getParameterByName('code', urlParams);\r\nvar state = getParameterByName('state', urlParams);\r\nvar realmId = getParameterByName('realmId', urlParams);\r\n\r\nfunction fetchData()\r\n{\r\n    fetch('http://localhost:8080/oauth', {method: 'GET', headers:{'code' : code, 'state': state, 'realmId': realmId}})\r\n        .then(res => res.json())\r\n        .catch(function (err) {\r\n        return err;\r\n        })\r\n}\r\n\r\nfetchData();\r\n\r\n//Close the window and load the main page\r\nif(window.opener) {\r\n    window.opener.location.href = '/connected'\r\n    window.close()\r\n}\r\n\r\nexport class Connected extends React.Component {\r\n    render() {\r\n        return (\r\n            <SideBar/>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}