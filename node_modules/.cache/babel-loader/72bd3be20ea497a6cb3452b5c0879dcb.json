{"ast":null,"code":"/*!\r\n * is-data-descriptor <https://github.com/jonschlinkert/is-data-descriptor>\r\n *\r\n * Copyright (c) 2015, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\n'use strict';\n\nvar typeOf = require('kind-of'); // data descriptor properties\n\n\nvar data = {\n  configurable: 'boolean',\n  enumerable: 'boolean',\n  writable: 'boolean'\n};\n\nfunction isDataDescriptor(obj, prop) {\n  if (typeOf(obj) !== 'object') {\n    return false;\n  }\n\n  if (typeof prop === 'string') {\n    var val = Object.getOwnPropertyDescriptor(obj, prop);\n    return typeof val !== 'undefined';\n  }\n\n  if (!('value' in obj) && !('writable' in obj)) {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (key === 'value') continue;\n\n    if (!data.hasOwnProperty(key)) {\n      continue;\n    }\n\n    if (typeOf(obj[key]) === data[key]) {\n      continue;\n    }\n\n    if (typeof obj[key] !== 'undefined') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\r\n * Expose `isDataDescriptor`\r\n */\n\n\nmodule.exports = isDataDescriptor;","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/define-property/node_modules/is-data-descriptor/index.js"],"names":["typeOf","require","data","configurable","enumerable","writable","isDataDescriptor","obj","prop","val","Object","getOwnPropertyDescriptor","key","hasOwnProperty","module","exports"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB,C,CAEA;;;AACA,IAAIC,IAAI,GAAG;AACTC,EAAAA,YAAY,EAAE,SADL;AAETC,EAAAA,UAAU,EAAE,SAFH;AAGTC,EAAAA,QAAQ,EAAE;AAHD,CAAX;;AAMA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACnC,MAAIR,MAAM,CAACO,GAAD,CAAN,KAAgB,QAApB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAIC,GAAG,GAAGC,MAAM,CAACC,wBAAP,CAAgCJ,GAAhC,EAAqCC,IAArC,CAAV;AACA,WAAO,OAAOC,GAAP,KAAe,WAAtB;AACD;;AAED,MAAI,EAAE,WAAWF,GAAb,KAAqB,EAAE,cAAcA,GAAhB,CAAzB,EAA+C;AAC7C,WAAO,KAAP;AACD;;AAED,OAAK,IAAIK,GAAT,IAAgBL,GAAhB,EAAqB;AACnB,QAAIK,GAAG,KAAK,OAAZ,EAAqB;;AAErB,QAAI,CAACV,IAAI,CAACW,cAAL,CAAoBD,GAApB,CAAL,EAA+B;AAC7B;AACD;;AAED,QAAIZ,MAAM,CAACO,GAAG,CAACK,GAAD,CAAJ,CAAN,KAAqBV,IAAI,CAACU,GAAD,CAA7B,EAAoC;AAClC;AACD;;AAED,QAAI,OAAOL,GAAG,CAACK,GAAD,CAAV,KAAoB,WAAxB,EAAqC;AACnC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED;;;;;AAIAE,MAAM,CAACC,OAAP,GAAiBT,gBAAjB","sourcesContent":["/*!\r\n * is-data-descriptor <https://github.com/jonschlinkert/is-data-descriptor>\r\n *\r\n * Copyright (c) 2015, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar typeOf = require('kind-of');\r\n\r\n// data descriptor properties\r\nvar data = {\r\n  configurable: 'boolean',\r\n  enumerable: 'boolean',\r\n  writable: 'boolean'\r\n};\r\n\r\nfunction isDataDescriptor(obj, prop) {\r\n  if (typeOf(obj) !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (typeof prop === 'string') {\r\n    var val = Object.getOwnPropertyDescriptor(obj, prop);\r\n    return typeof val !== 'undefined';\r\n  }\r\n\r\n  if (!('value' in obj) && !('writable' in obj)) {\r\n    return false;\r\n  }\r\n\r\n  for (var key in obj) {\r\n    if (key === 'value') continue;\r\n\r\n    if (!data.hasOwnProperty(key)) {\r\n      continue;\r\n    }\r\n\r\n    if (typeOf(obj[key]) === data[key]) {\r\n      continue;\r\n    }\r\n\r\n    if (typeof obj[key] !== 'undefined') {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Expose `isDataDescriptor`\r\n */\r\n\r\nmodule.exports = isDataDescriptor;\r\n"]},"metadata":{},"sourceType":"script"}