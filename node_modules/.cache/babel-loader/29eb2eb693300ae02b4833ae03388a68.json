{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.addResult = exports.buildFailureTestResult = exports.makeEmptyAggregatedTestResult = void 0;\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n\nconst makeEmptyAggregatedTestResult = () => ({\n  numFailedTestSuites: 0,\n  numFailedTests: 0,\n  numPassedTestSuites: 0,\n  numPassedTests: 0,\n  numPendingTestSuites: 0,\n  numPendingTests: 0,\n  numRuntimeErrorTestSuites: 0,\n  numTodoTests: 0,\n  numTotalTestSuites: 0,\n  numTotalTests: 0,\n  openHandles: [],\n  snapshot: {\n    added: 0,\n    didUpdate: false,\n    // is set only after the full run\n    failure: false,\n    filesAdded: 0,\n    // combines individual test results + removed files after the full run\n    filesRemoved: 0,\n    filesRemovedList: [],\n    filesUnmatched: 0,\n    filesUpdated: 0,\n    matched: 0,\n    total: 0,\n    unchecked: 0,\n    uncheckedKeysByFile: [],\n    unmatched: 0,\n    updated: 0\n  },\n  startTime: 0,\n  success: true,\n  testResults: [],\n  wasInterrupted: false\n});\n\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\n\nconst buildFailureTestResult = (testPath, err) => ({\n  console: undefined,\n  displayName: '',\n  failureMessage: null,\n  leaks: false,\n  numFailingTests: 0,\n  numPassingTests: 0,\n  numPendingTests: 0,\n  numTodoTests: 0,\n  openHandles: [],\n  perfStats: {\n    end: 0,\n    start: 0\n  },\n  skipped: false,\n  snapshot: {\n    added: 0,\n    fileDeleted: false,\n    matched: 0,\n    unchecked: 0,\n    uncheckedKeys: [],\n    unmatched: 0,\n    updated: 0\n  },\n  sourceMaps: {},\n  testExecError: err,\n  testFilePath: testPath,\n  testResults: []\n}); // Add individual test result to an aggregated test result\n\n\nexports.buildFailureTestResult = buildFailureTestResult;\n\nconst addResult = (aggregatedResults, testResult) => {\n  // `todos` are new as of Jest 24, and not all runners return it.\n  // Set it to `0` to avoid `NaN`\n  if (!testResult.numTodoTests) {\n    testResult.numTodoTests = 0;\n  }\n\n  aggregatedResults.testResults.push(testResult);\n  aggregatedResults.numTotalTests += testResult.numPassingTests + testResult.numFailingTests + testResult.numPendingTests + testResult.numTodoTests;\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\n\n  if (testResult.testExecError) {\n    aggregatedResults.numRuntimeErrorTestSuites++;\n  }\n\n  if (testResult.skipped) {\n    aggregatedResults.numPendingTestSuites++;\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\n    aggregatedResults.numFailedTestSuites++;\n  } else {\n    aggregatedResults.numPassedTestSuites++;\n  } // Snapshot data\n\n\n  if (testResult.snapshot.added) {\n    aggregatedResults.snapshot.filesAdded++;\n  }\n\n  if (testResult.snapshot.fileDeleted) {\n    aggregatedResults.snapshot.filesRemoved++;\n  }\n\n  if (testResult.snapshot.unmatched) {\n    aggregatedResults.snapshot.filesUnmatched++;\n  }\n\n  if (testResult.snapshot.updated) {\n    aggregatedResults.snapshot.filesUpdated++;\n  }\n\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\n\n  if (testResult.snapshot.uncheckedKeys && testResult.snapshot.uncheckedKeys.length > 0) {\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\n      filePath: testResult.testFilePath,\n      keys: testResult.snapshot.uncheckedKeys\n    });\n  }\n\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\n  aggregatedResults.snapshot.total += testResult.snapshot.added + testResult.snapshot.matched + testResult.snapshot.unmatched + testResult.snapshot.updated;\n};\n\nexports.addResult = addResult;","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/@jest/test-result/build/helpers.js"],"names":["Object","defineProperty","exports","value","addResult","buildFailureTestResult","makeEmptyAggregatedTestResult","numFailedTestSuites","numFailedTests","numPassedTestSuites","numPassedTests","numPendingTestSuites","numPendingTests","numRuntimeErrorTestSuites","numTodoTests","numTotalTestSuites","numTotalTests","openHandles","snapshot","added","didUpdate","failure","filesAdded","filesRemoved","filesRemovedList","filesUnmatched","filesUpdated","matched","total","unchecked","uncheckedKeysByFile","unmatched","updated","startTime","success","testResults","wasInterrupted","testPath","err","console","undefined","displayName","failureMessage","leaks","numFailingTests","numPassingTests","perfStats","end","start","skipped","fileDeleted","uncheckedKeys","sourceMaps","testExecError","testFilePath","aggregatedResults","testResult","push","length","filePath","keys"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', {\r\n  value: true\r\n});\r\nexports.addResult = exports.buildFailureTestResult = exports.makeEmptyAggregatedTestResult = void 0;\r\n\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nconst makeEmptyAggregatedTestResult = () => ({\r\n  numFailedTestSuites: 0,\r\n  numFailedTests: 0,\r\n  numPassedTestSuites: 0,\r\n  numPassedTests: 0,\r\n  numPendingTestSuites: 0,\r\n  numPendingTests: 0,\r\n  numRuntimeErrorTestSuites: 0,\r\n  numTodoTests: 0,\r\n  numTotalTestSuites: 0,\r\n  numTotalTests: 0,\r\n  openHandles: [],\r\n  snapshot: {\r\n    added: 0,\r\n    didUpdate: false,\r\n    // is set only after the full run\r\n    failure: false,\r\n    filesAdded: 0,\r\n    // combines individual test results + removed files after the full run\r\n    filesRemoved: 0,\r\n    filesRemovedList: [],\r\n    filesUnmatched: 0,\r\n    filesUpdated: 0,\r\n    matched: 0,\r\n    total: 0,\r\n    unchecked: 0,\r\n    uncheckedKeysByFile: [],\r\n    unmatched: 0,\r\n    updated: 0\r\n  },\r\n  startTime: 0,\r\n  success: true,\r\n  testResults: [],\r\n  wasInterrupted: false\r\n});\r\n\r\nexports.makeEmptyAggregatedTestResult = makeEmptyAggregatedTestResult;\r\n\r\nconst buildFailureTestResult = (testPath, err) => ({\r\n  console: undefined,\r\n  displayName: '',\r\n  failureMessage: null,\r\n  leaks: false,\r\n  numFailingTests: 0,\r\n  numPassingTests: 0,\r\n  numPendingTests: 0,\r\n  numTodoTests: 0,\r\n  openHandles: [],\r\n  perfStats: {\r\n    end: 0,\r\n    start: 0\r\n  },\r\n  skipped: false,\r\n  snapshot: {\r\n    added: 0,\r\n    fileDeleted: false,\r\n    matched: 0,\r\n    unchecked: 0,\r\n    uncheckedKeys: [],\r\n    unmatched: 0,\r\n    updated: 0\r\n  },\r\n  sourceMaps: {},\r\n  testExecError: err,\r\n  testFilePath: testPath,\r\n  testResults: []\r\n}); // Add individual test result to an aggregated test result\r\n\r\nexports.buildFailureTestResult = buildFailureTestResult;\r\n\r\nconst addResult = (aggregatedResults, testResult) => {\r\n  // `todos` are new as of Jest 24, and not all runners return it.\r\n  // Set it to `0` to avoid `NaN`\r\n  if (!testResult.numTodoTests) {\r\n    testResult.numTodoTests = 0;\r\n  }\r\n\r\n  aggregatedResults.testResults.push(testResult);\r\n  aggregatedResults.numTotalTests +=\r\n    testResult.numPassingTests +\r\n    testResult.numFailingTests +\r\n    testResult.numPendingTests +\r\n    testResult.numTodoTests;\r\n  aggregatedResults.numFailedTests += testResult.numFailingTests;\r\n  aggregatedResults.numPassedTests += testResult.numPassingTests;\r\n  aggregatedResults.numPendingTests += testResult.numPendingTests;\r\n  aggregatedResults.numTodoTests += testResult.numTodoTests;\r\n\r\n  if (testResult.testExecError) {\r\n    aggregatedResults.numRuntimeErrorTestSuites++;\r\n  }\r\n\r\n  if (testResult.skipped) {\r\n    aggregatedResults.numPendingTestSuites++;\r\n  } else if (testResult.numFailingTests > 0 || testResult.testExecError) {\r\n    aggregatedResults.numFailedTestSuites++;\r\n  } else {\r\n    aggregatedResults.numPassedTestSuites++;\r\n  } // Snapshot data\r\n\r\n  if (testResult.snapshot.added) {\r\n    aggregatedResults.snapshot.filesAdded++;\r\n  }\r\n\r\n  if (testResult.snapshot.fileDeleted) {\r\n    aggregatedResults.snapshot.filesRemoved++;\r\n  }\r\n\r\n  if (testResult.snapshot.unmatched) {\r\n    aggregatedResults.snapshot.filesUnmatched++;\r\n  }\r\n\r\n  if (testResult.snapshot.updated) {\r\n    aggregatedResults.snapshot.filesUpdated++;\r\n  }\r\n\r\n  aggregatedResults.snapshot.added += testResult.snapshot.added;\r\n  aggregatedResults.snapshot.matched += testResult.snapshot.matched;\r\n  aggregatedResults.snapshot.unchecked += testResult.snapshot.unchecked;\r\n\r\n  if (\r\n    testResult.snapshot.uncheckedKeys &&\r\n    testResult.snapshot.uncheckedKeys.length > 0\r\n  ) {\r\n    aggregatedResults.snapshot.uncheckedKeysByFile.push({\r\n      filePath: testResult.testFilePath,\r\n      keys: testResult.snapshot.uncheckedKeys\r\n    });\r\n  }\r\n\r\n  aggregatedResults.snapshot.unmatched += testResult.snapshot.unmatched;\r\n  aggregatedResults.snapshot.updated += testResult.snapshot.updated;\r\n  aggregatedResults.snapshot.total +=\r\n    testResult.snapshot.added +\r\n    testResult.snapshot.matched +\r\n    testResult.snapshot.unmatched +\r\n    testResult.snapshot.updated;\r\n};\r\n\r\nexports.addResult = addResult;\r\n"]},"metadata":{},"sourceType":"script"}