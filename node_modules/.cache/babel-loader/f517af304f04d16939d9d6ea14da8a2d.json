{"ast":null,"code":"'use strict';\n/**\r\n * Module dependencies\r\n */\n\nexports.extend = require('extend-shallow');\nexports.SourceMap = require('source-map');\nexports.sourceMapResolve = require('source-map-resolve');\n/**\r\n * Convert backslash in the given string to forward slashes\r\n */\n\nexports.unixify = function (fp) {\n  return fp.split(/\\\\+/).join('/');\n};\n/**\r\n * Return true if `val` is a non-empty string\r\n *\r\n * @param {String} `str`\r\n * @return {Boolean}\r\n */\n\n\nexports.isString = function (str) {\n  return str && typeof str === 'string';\n};\n/**\r\n * Cast `val` to an array\r\n * @return {Array}\r\n */\n\n\nexports.arrayify = function (val) {\n  if (typeof val === 'string') return [val];\n  return val ? Array.isArray(val) ? val : [val] : [];\n};\n/**\r\n * Get the last `n` element from the given `array`\r\n * @param {Array} `array`\r\n * @return {*}\r\n */\n\n\nexports.last = function (arr, n) {\n  return arr[arr.length - (n || 1)];\n};","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/snapdragon/lib/utils.js"],"names":["exports","extend","require","SourceMap","sourceMapResolve","unixify","fp","split","join","isString","str","arrayify","val","Array","isArray","last","arr","n","length"],"mappings":"AAAA;AAEA;;;;AAIAA,OAAO,CAACC,MAAR,GAAiBC,OAAO,CAAC,gBAAD,CAAxB;AACAF,OAAO,CAACG,SAAR,GAAoBD,OAAO,CAAC,YAAD,CAA3B;AACAF,OAAO,CAACI,gBAAR,GAA2BF,OAAO,CAAC,oBAAD,CAAlC;AAEA;;;;AAIAF,OAAO,CAACK,OAAR,GAAkB,UAASC,EAAT,EAAa;AAC7B,SAAOA,EAAE,CAACC,KAAH,CAAS,KAAT,EAAgBC,IAAhB,CAAqB,GAArB,CAAP;AACD,CAFD;AAIA;;;;;;;;AAOAR,OAAO,CAACS,QAAR,GAAmB,UAASC,GAAT,EAAc;AAC/B,SAAOA,GAAG,IAAI,OAAOA,GAAP,KAAe,QAA7B;AACD,CAFD;AAIA;;;;;;AAKAV,OAAO,CAACW,QAAR,GAAmB,UAASC,GAAT,EAAc;AAC/B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,CAACA,GAAD,CAAP;AAC7B,SAAOA,GAAG,GAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAA/B,GAAwC,EAAlD;AACD,CAHD;AAKA;;;;;;;AAMAZ,OAAO,CAACe,IAAR,GAAe,UAASC,GAAT,EAAcC,CAAd,EAAiB;AAC9B,SAAOD,GAAG,CAACA,GAAG,CAACE,MAAJ,IAAcD,CAAC,IAAI,CAAnB,CAAD,CAAV;AACD,CAFD","sourcesContent":["'use strict';\r\n\r\n/**\r\n * Module dependencies\r\n */\r\n\r\nexports.extend = require('extend-shallow');\r\nexports.SourceMap = require('source-map');\r\nexports.sourceMapResolve = require('source-map-resolve');\r\n\r\n/**\r\n * Convert backslash in the given string to forward slashes\r\n */\r\n\r\nexports.unixify = function(fp) {\r\n  return fp.split(/\\\\+/).join('/');\r\n};\r\n\r\n/**\r\n * Return true if `val` is a non-empty string\r\n *\r\n * @param {String} `str`\r\n * @return {Boolean}\r\n */\r\n\r\nexports.isString = function(str) {\r\n  return str && typeof str === 'string';\r\n};\r\n\r\n/**\r\n * Cast `val` to an array\r\n * @return {Array}\r\n */\r\n\r\nexports.arrayify = function(val) {\r\n  if (typeof val === 'string') return [val];\r\n  return val ? (Array.isArray(val) ? val : [val]) : [];\r\n};\r\n\r\n/**\r\n * Get the last `n` element from the given `array`\r\n * @param {Array} `array`\r\n * @return {*}\r\n */\r\n\r\nexports.last = function(arr, n) {\r\n  return arr[arr.length - (n || 1)];\r\n};\r\n"]},"metadata":{},"sourceType":"script"}