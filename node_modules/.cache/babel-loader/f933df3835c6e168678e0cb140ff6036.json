{"ast":null,"code":"/*!\r\n * is-data-descriptor <https://github.com/jonschlinkert/is-data-descriptor>\r\n *\r\n * Copyright (c) 2015-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n\nvar typeOf = require('kind-of');\n\nmodule.exports = function isDataDescriptor(obj, prop) {\n  // data descriptor properties\n  var data = {\n    configurable: 'boolean',\n    enumerable: 'boolean',\n    writable: 'boolean'\n  };\n\n  if (typeOf(obj) !== 'object') {\n    return false;\n  }\n\n  if (typeof prop === 'string') {\n    var val = Object.getOwnPropertyDescriptor(obj, prop);\n    return typeof val !== 'undefined';\n  }\n\n  if (!('value' in obj) && !('writable' in obj)) {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (key === 'value') continue;\n\n    if (!data.hasOwnProperty(key)) {\n      continue;\n    }\n\n    if (typeOf(obj[key]) === data[key]) {\n      continue;\n    }\n\n    if (typeof obj[key] !== 'undefined') {\n      return false;\n    }\n  }\n\n  return true;\n};","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/is-data-descriptor/index.js"],"names":["typeOf","require","module","exports","isDataDescriptor","obj","prop","data","configurable","enumerable","writable","val","Object","getOwnPropertyDescriptor","key","hasOwnProperty"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACpD;AACA,MAAIC,IAAI,GAAG;AACTC,IAAAA,YAAY,EAAE,SADL;AAETC,IAAAA,UAAU,EAAE,SAFH;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GAAX;;AAMA,MAAIV,MAAM,CAACK,GAAD,CAAN,KAAgB,QAApB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAIK,GAAG,GAAGC,MAAM,CAACC,wBAAP,CAAgCR,GAAhC,EAAqCC,IAArC,CAAV;AACA,WAAO,OAAOK,GAAP,KAAe,WAAtB;AACD;;AAED,MAAI,EAAE,WAAWN,GAAb,KAAqB,EAAE,cAAcA,GAAhB,CAAzB,EAA+C;AAC7C,WAAO,KAAP;AACD;;AAED,OAAK,IAAIS,GAAT,IAAgBT,GAAhB,EAAqB;AACnB,QAAIS,GAAG,KAAK,OAAZ,EAAqB;;AAErB,QAAI,CAACP,IAAI,CAACQ,cAAL,CAAoBD,GAApB,CAAL,EAA+B;AAC7B;AACD;;AAED,QAAId,MAAM,CAACK,GAAG,CAACS,GAAD,CAAJ,CAAN,KAAqBP,IAAI,CAACO,GAAD,CAA7B,EAAoC;AAClC;AACD;;AAED,QAAI,OAAOT,GAAG,CAACS,GAAD,CAAV,KAAoB,WAAxB,EAAqC;AACnC,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CArCD","sourcesContent":["/*!\r\n * is-data-descriptor <https://github.com/jonschlinkert/is-data-descriptor>\r\n *\r\n * Copyright (c) 2015-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar typeOf = require('kind-of');\r\n\r\nmodule.exports = function isDataDescriptor(obj, prop) {\r\n  // data descriptor properties\r\n  var data = {\r\n    configurable: 'boolean',\r\n    enumerable: 'boolean',\r\n    writable: 'boolean'\r\n  };\r\n\r\n  if (typeOf(obj) !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (typeof prop === 'string') {\r\n    var val = Object.getOwnPropertyDescriptor(obj, prop);\r\n    return typeof val !== 'undefined';\r\n  }\r\n\r\n  if (!('value' in obj) && !('writable' in obj)) {\r\n    return false;\r\n  }\r\n\r\n  for (var key in obj) {\r\n    if (key === 'value') continue;\r\n\r\n    if (!data.hasOwnProperty(key)) {\r\n      continue;\r\n    }\r\n\r\n    if (typeOf(obj[key]) === data[key]) {\r\n      continue;\r\n    }\r\n\r\n    if (typeof obj[key] !== 'undefined') {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}