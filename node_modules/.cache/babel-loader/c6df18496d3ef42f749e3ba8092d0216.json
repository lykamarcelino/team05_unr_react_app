{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liliana\\\\Documents\\\\AHope\\\\team05_unr_react_app\\\\src\\\\components\\\\graphDisplays\\\\StaticGraph.js\";\nimport React from \"react\";\nimport LineGraph from \"../graphComponents/LineGraph\";\nimport BarGraph from \"../graphComponents/BarGraph\";\nimport ScatterplotGraph from \"../graphComponents/ScatterplotGraph\";\nimport PieGraph from \"../graphComponents/PieGraph\";\nexport default class StaticGraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphType: this.props.graphType,\n      labels: this.props.labels,\n      label: this.props.dataLabel,\n      backgroundColor: this.props.colors,\n      data: this.props.data,\n      title: this.props.title,\n      xAxisLabel: this.props.xAxisLabel,\n      yAxisLabel: this.props.yAxisLabel,\n      showLegend: this.props.showLegend,\n      legendPosition: this.props.legendPosition,\n      dataFetched: true,\n      varSet: false\n    };\n  }\n\n  render() {\n    var chartData;\n\n    if (this.state.graphType === \"Scatter\") {\n      chartData = {\n        labels: this.state.labels,\n        datasets: [{\n          label: this.state.dataLabel,\n          data: this.state.data,\n          backgroundColor: this.state.colors,\n          pointRadius: 5,\n          fill: false,\n          showLine: false\n        }]\n      };\n    } else if (this.state.graphType === \"Line\") {\n      chartData = {\n        labels: this.state.labels,\n        datasets: [{\n          label: this.state.dataLabel,\n          data: this.state.data,\n          backgroundColor: 'rgba(90, 120, 190, 0.6)',\n          fill: false,\n          borderColor: 'rgba(90, 120, 190, 0.6)'\n        }]\n      };\n    } else {\n      chartData = {\n        labels: this.state.labels,\n        datasets: [{\n          label: this.state.dataLabel,\n          data: this.state.data,\n          backgroundColor: this.state.colors\n        }]\n      };\n    }\n\n    if (this.state.dataFetched) {\n      this.setState({\n        varSet: true,\n        dataFetched: false\n      });\n    }\n\n    return React.createElement(React.Fragment, null, this.state.graphType === \"Bar\" && this.state.varSet === true && React.createElement(BarGraph, {\n      chartData: this.state.chartData,\n      title: this.state.title,\n      xAxisLabel: this.state.xAxisLabel,\n      yAxisLabel: this.state.yAxisLabel,\n      showLegend: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.state.graphType === \"Line\" && this.state.varSet === true && React.createElement(LineGraph, {\n      chartData: this.state.chartData,\n      title: this.state.title,\n      xAxisLabel: this.state.xAxisLabel,\n      yAxisLabel: this.state.yAxisLabel,\n      showLegend: this.state.showLegend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), this.state.graphType === \"Scatter\" && this.state.varSet === true && React.createElement(ScatterplotGraph, {\n      chartData: this.state.chartData,\n      title: this.state.title,\n      xAxisLabel: this.state.xAxisLabel,\n      yAxisLabel: this.state.yAxisLabel,\n      showLegend: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), this.state.graphType === \"Pie\" && this.state.varSet === true && React.createElement(PieGraph, {\n      chartData: this.state.chartData,\n      title: this.state.title,\n      showLegend: this.state.showLegend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Liliana/Documents/AHope/team05_unr_react_app/src/components/graphDisplays/StaticGraph.js"],"names":["React","LineGraph","BarGraph","ScatterplotGraph","PieGraph","StaticGraph","Component","constructor","props","state","graphType","labels","label","dataLabel","backgroundColor","colors","data","title","xAxisLabel","yAxisLabel","showLegend","legendPosition","dataFetched","varSet","render","chartData","datasets","pointRadius","fill","showLine","borderColor","setState"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport LineGraph from \"../graphComponents/LineGraph\";\r\nimport BarGraph from \"../graphComponents/BarGraph\";\r\nimport ScatterplotGraph from \"../graphComponents/ScatterplotGraph\";\r\nimport PieGraph from \"../graphComponents/PieGraph\";\r\n\r\nexport default class StaticGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            graphType: this.props.graphType,\r\n            labels: this.props.labels,\r\n            label: this.props.dataLabel,\r\n            backgroundColor: this.props.colors,\r\n            data: this.props.data,\r\n\r\n            title: this.props.title,\r\n            xAxisLabel: this.props.xAxisLabel,\r\n            yAxisLabel: this.props.yAxisLabel,\r\n\r\n            showLegend: this.props.showLegend,\r\n            legendPosition: this.props.legendPosition,\r\n\r\n            dataFetched: true,\r\n            varSet: false,\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        var chartData;\r\n\r\n        if(this.state.graphType === \"Scatter\") {\r\n            chartData = {\r\n                labels: this.state.labels,\r\n                datasets: [\r\n                    {\r\n                        label: this.state.dataLabel,\r\n                        data: this.state.data,\r\n                        backgroundColor: this.state.colors,\r\n                        pointRadius: 5,\r\n                        fill: false,\r\n                        showLine: false\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        else if (this.state.graphType === \"Line\"){\r\n            chartData = {\r\n                labels: this.state.labels,\r\n                datasets: [\r\n                    {\r\n                        label: this.state.dataLabel,\r\n                        data: this.state.data,\r\n                        backgroundColor: 'rgba(90, 120, 190, 0.6)',\r\n                        fill: false,\r\n                        borderColor: 'rgba(90, 120, 190, 0.6)',\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        else {\r\n            chartData = {\r\n                labels: this.state.labels,\r\n                datasets: [\r\n                    {\r\n                        label: this.state.dataLabel,\r\n                        data: this.state.data,\r\n                        backgroundColor: this.state.colors,\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        if(this.state.dataFetched){\r\n            this.setState({varSet: true, dataFetched: false})\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <>\r\n                {this.state.graphType === \"Bar\" && this.state.varSet === true &&\r\n                <BarGraph\r\n                    chartData = {this.state.chartData}\r\n                    title = {this.state.title}\r\n                    xAxisLabel = {this.state.xAxisLabel}\r\n                    yAxisLabel = {this.state.yAxisLabel}\r\n                    showLegend = {false}\r\n                />\r\n                }\r\n                {this.state.graphType === \"Line\" && this.state.varSet === true &&\r\n                <LineGraph\r\n                    chartData = {this.state.chartData}\r\n                    title = {this.state.title}\r\n                    xAxisLabel = {this.state.xAxisLabel}\r\n                    yAxisLabel = {this.state.yAxisLabel}\r\n                    showLegend = {this.state.showLegend}\r\n                />\r\n                }\r\n                {this.state.graphType === \"Scatter\" && this.state.varSet === true &&\r\n                <ScatterplotGraph\r\n                    chartData = {this.state.chartData}\r\n                    title = {this.state.title}\r\n                    xAxisLabel = {this.state.xAxisLabel}\r\n                    yAxisLabel = {this.state.yAxisLabel}\r\n                    showLegend = {false}\r\n                />\r\n                }\r\n                {this.state.graphType === \"Pie\" && this.state.varSet === true &&\r\n                <PieGraph\r\n                    chartData = {this.state.chartData}\r\n                    title = {this.state.title}\r\n                    showLegend = {this.state.showLegend}\r\n                />}\r\n            </>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}