{"ast":null,"code":"/*!\r\n * fill-range <https://github.com/jonschlinkert/fill-range>\r\n *\r\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n\nvar util = require('util');\n\nvar isNumber = require('is-number');\n\nvar extend = require('extend-shallow');\n\nvar repeat = require('repeat-string');\n\nvar toRegex = require('to-regex-range');\n/**\r\n * Return a range of numbers or letters.\r\n *\r\n * @param  {String} `start` Start of the range\r\n * @param  {String} `stop` End of the range\r\n * @param  {String} `step` Increment or decrement to use.\r\n * @param  {Function} `fn` Custom function to modify each element in the range.\r\n * @return {Array}\r\n */\n\n\nfunction fillRange(start, stop, step, options) {\n  if (typeof start === 'undefined') {\n    return [];\n  }\n\n  if (typeof stop === 'undefined' || start === stop) {\n    // special case, for handling negative zero\n    var isString = typeof start === 'string';\n\n    if (isNumber(start) && !toNumber(start)) {\n      return [isString ? '0' : 0];\n    }\n\n    return [start];\n  }\n\n  if (typeof step !== 'number' && typeof step !== 'string') {\n    options = step;\n    step = undefined;\n  }\n\n  if (typeof options === 'function') {\n    options = {\n      transform: options\n    };\n  }\n\n  var opts = extend({\n    step: step\n  }, options);\n\n  if (opts.step && !isValidNumber(opts.step)) {\n    if (opts.strictRanges === true) {\n      throw new TypeError('expected options.step to be a number');\n    }\n\n    return [];\n  }\n\n  opts.isNumber = isValidNumber(start) && isValidNumber(stop);\n\n  if (!opts.isNumber && !isValid(start, stop)) {\n    if (opts.strictRanges === true) {\n      throw new RangeError('invalid range arguments: ' + util.inspect([start, stop]));\n    }\n\n    return [];\n  }\n\n  opts.isPadded = isPadded(start) || isPadded(stop);\n  opts.toString = opts.stringify || typeof opts.step === 'string' || typeof start === 'string' || typeof stop === 'string' || !opts.isNumber;\n\n  if (opts.isPadded) {\n    opts.maxLength = Math.max(String(start).length, String(stop).length);\n  } // support legacy minimatch/fill-range options\n\n\n  if (typeof opts.optimize === 'boolean') opts.toRegex = opts.optimize;\n  if (typeof opts.makeRe === 'boolean') opts.toRegex = opts.makeRe;\n  return expand(start, stop, opts);\n}\n\nfunction expand(start, stop, options) {\n  var a = options.isNumber ? toNumber(start) : start.charCodeAt(0);\n  var b = options.isNumber ? toNumber(stop) : stop.charCodeAt(0);\n  var step = Math.abs(toNumber(options.step)) || 1;\n\n  if (options.toRegex && step === 1) {\n    return toRange(a, b, start, stop, options);\n  }\n\n  var zero = {\n    greater: [],\n    lesser: []\n  };\n  var asc = a < b;\n  var arr = new Array(Math.round((asc ? b - a : a - b) / step));\n  var idx = 0;\n\n  while (asc ? a <= b : a >= b) {\n    var val = options.isNumber ? a : String.fromCharCode(a);\n\n    if (options.toRegex && (val >= 0 || !options.isNumber)) {\n      zero.greater.push(val);\n    } else {\n      zero.lesser.push(Math.abs(val));\n    }\n\n    if (options.isPadded) {\n      val = zeros(val, options);\n    }\n\n    if (options.toString) {\n      val = String(val);\n    }\n\n    if (typeof options.transform === 'function') {\n      arr[idx++] = options.transform(val, a, b, step, idx, arr, options);\n    } else {\n      arr[idx++] = val;\n    }\n\n    if (asc) {\n      a += step;\n    } else {\n      a -= step;\n    }\n  }\n\n  if (options.toRegex === true) {\n    return toSequence(arr, zero, options);\n  }\n\n  return arr;\n}\n\nfunction toRange(a, b, start, stop, options) {\n  if (options.isPadded) {\n    return toRegex(start, stop, options);\n  }\n\n  if (options.isNumber) {\n    return toRegex(Math.min(a, b), Math.max(a, b), options);\n  }\n\n  var start = String.fromCharCode(Math.min(a, b));\n  var stop = String.fromCharCode(Math.max(a, b));\n  return '[' + start + '-' + stop + ']';\n}\n\nfunction toSequence(arr, zeros, options) {\n  var greater = '',\n      lesser = '';\n\n  if (zeros.greater.length) {\n    greater = zeros.greater.join('|');\n  }\n\n  if (zeros.lesser.length) {\n    lesser = '-(' + zeros.lesser.join('|') + ')';\n  }\n\n  var res = greater && lesser ? greater + '|' + lesser : greater || lesser;\n\n  if (options.capture) {\n    return '(' + res + ')';\n  }\n\n  return res;\n}\n\nfunction zeros(val, options) {\n  if (options.isPadded) {\n    var str = String(val);\n    var len = str.length;\n    var dash = '';\n\n    if (str.charAt(0) === '-') {\n      dash = '-';\n      str = str.slice(1);\n    }\n\n    var diff = options.maxLength - len;\n    var pad = repeat('0', diff);\n    val = dash + pad + str;\n  }\n\n  if (options.stringify) {\n    return String(val);\n  }\n\n  return val;\n}\n\nfunction toNumber(val) {\n  return Number(val) || 0;\n}\n\nfunction isPadded(str) {\n  return /^-?0\\d/.test(str);\n}\n\nfunction isValid(min, max) {\n  return (isValidNumber(min) || isValidLetter(min)) && (isValidNumber(max) || isValidLetter(max));\n}\n\nfunction isValidLetter(ch) {\n  return typeof ch === 'string' && ch.length === 1 && /^\\w+$/.test(ch);\n}\n\nfunction isValidNumber(n) {\n  return isNumber(n) && !/\\./.test(n);\n}\n/**\r\n * Expose `fillRange`\r\n * @type {Function}\r\n */\n\n\nmodule.exports = fillRange;","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/fill-range/index.js"],"names":["util","require","isNumber","extend","repeat","toRegex","fillRange","start","stop","step","options","isString","toNumber","undefined","transform","opts","isValidNumber","strictRanges","TypeError","isValid","RangeError","inspect","isPadded","toString","stringify","maxLength","Math","max","String","length","optimize","makeRe","expand","a","charCodeAt","b","abs","toRange","zero","greater","lesser","asc","arr","Array","round","idx","val","fromCharCode","push","zeros","toSequence","min","join","res","capture","str","len","dash","charAt","slice","diff","pad","Number","test","isValidLetter","ch","n","module","exports"],"mappings":"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","sourcesContent":["/*!\r\n * fill-range <https://github.com/jonschlinkert/fill-range>\r\n *\r\n * Copyright (c) 2014-2015, 2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar util = require('util');\r\nvar isNumber = require('is-number');\r\nvar extend = require('extend-shallow');\r\nvar repeat = require('repeat-string');\r\nvar toRegex = require('to-regex-range');\r\n\r\n/**\r\n * Return a range of numbers or letters.\r\n *\r\n * @param  {String} `start` Start of the range\r\n * @param  {String} `stop` End of the range\r\n * @param  {String} `step` Increment or decrement to use.\r\n * @param  {Function} `fn` Custom function to modify each element in the range.\r\n * @return {Array}\r\n */\r\n\r\nfunction fillRange(start, stop, step, options) {\r\n  if (typeof start === 'undefined') {\r\n    return [];\r\n  }\r\n\r\n  if (typeof stop === 'undefined' || start === stop) {\r\n    // special case, for handling negative zero\r\n    var isString = typeof start === 'string';\r\n    if (isNumber(start) && !toNumber(start)) {\r\n      return [isString ? '0' : 0];\r\n    }\r\n    return [start];\r\n  }\r\n\r\n  if (typeof step !== 'number' && typeof step !== 'string') {\r\n    options = step;\r\n    step = undefined;\r\n  }\r\n\r\n  if (typeof options === 'function') {\r\n    options = { transform: options };\r\n  }\r\n\r\n  var opts = extend({step: step}, options);\r\n  if (opts.step && !isValidNumber(opts.step)) {\r\n    if (opts.strictRanges === true) {\r\n      throw new TypeError('expected options.step to be a number');\r\n    }\r\n    return [];\r\n  }\r\n\r\n  opts.isNumber = isValidNumber(start) && isValidNumber(stop);\r\n  if (!opts.isNumber && !isValid(start, stop)) {\r\n    if (opts.strictRanges === true) {\r\n      throw new RangeError('invalid range arguments: ' + util.inspect([start, stop]));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  opts.isPadded = isPadded(start) || isPadded(stop);\r\n  opts.toString = opts.stringify\r\n    || typeof opts.step === 'string'\r\n    || typeof start === 'string'\r\n    || typeof stop === 'string'\r\n    || !opts.isNumber;\r\n\r\n  if (opts.isPadded) {\r\n    opts.maxLength = Math.max(String(start).length, String(stop).length);\r\n  }\r\n\r\n  // support legacy minimatch/fill-range options\r\n  if (typeof opts.optimize === 'boolean') opts.toRegex = opts.optimize;\r\n  if (typeof opts.makeRe === 'boolean') opts.toRegex = opts.makeRe;\r\n  return expand(start, stop, opts);\r\n}\r\n\r\nfunction expand(start, stop, options) {\r\n  var a = options.isNumber ? toNumber(start) : start.charCodeAt(0);\r\n  var b = options.isNumber ? toNumber(stop) : stop.charCodeAt(0);\r\n\r\n  var step = Math.abs(toNumber(options.step)) || 1;\r\n  if (options.toRegex && step === 1) {\r\n    return toRange(a, b, start, stop, options);\r\n  }\r\n\r\n  var zero = {greater: [], lesser: []};\r\n  var asc = a < b;\r\n  var arr = new Array(Math.round((asc ? b - a : a - b) / step));\r\n  var idx = 0;\r\n\r\n  while (asc ? a <= b : a >= b) {\r\n    var val = options.isNumber ? a : String.fromCharCode(a);\r\n    if (options.toRegex && (val >= 0 || !options.isNumber)) {\r\n      zero.greater.push(val);\r\n    } else {\r\n      zero.lesser.push(Math.abs(val));\r\n    }\r\n\r\n    if (options.isPadded) {\r\n      val = zeros(val, options);\r\n    }\r\n\r\n    if (options.toString) {\r\n      val = String(val);\r\n    }\r\n\r\n    if (typeof options.transform === 'function') {\r\n      arr[idx++] = options.transform(val, a, b, step, idx, arr, options);\r\n    } else {\r\n      arr[idx++] = val;\r\n    }\r\n\r\n    if (asc) {\r\n      a += step;\r\n    } else {\r\n      a -= step;\r\n    }\r\n  }\r\n\r\n  if (options.toRegex === true) {\r\n    return toSequence(arr, zero, options);\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction toRange(a, b, start, stop, options) {\r\n  if (options.isPadded) {\r\n    return toRegex(start, stop, options);\r\n  }\r\n\r\n  if (options.isNumber) {\r\n    return toRegex(Math.min(a, b), Math.max(a, b), options);\r\n  }\r\n\r\n  var start = String.fromCharCode(Math.min(a, b));\r\n  var stop = String.fromCharCode(Math.max(a, b));\r\n  return '[' + start + '-' + stop + ']';\r\n}\r\n\r\nfunction toSequence(arr, zeros, options) {\r\n  var greater = '', lesser = '';\r\n  if (zeros.greater.length) {\r\n    greater = zeros.greater.join('|');\r\n  }\r\n  if (zeros.lesser.length) {\r\n    lesser = '-(' + zeros.lesser.join('|') + ')';\r\n  }\r\n  var res = greater && lesser\r\n    ? greater + '|' + lesser\r\n    : greater || lesser;\r\n\r\n  if (options.capture) {\r\n    return '(' + res + ')';\r\n  }\r\n  return res;\r\n}\r\n\r\nfunction zeros(val, options) {\r\n  if (options.isPadded) {\r\n    var str = String(val);\r\n    var len = str.length;\r\n    var dash = '';\r\n    if (str.charAt(0) === '-') {\r\n      dash = '-';\r\n      str = str.slice(1);\r\n    }\r\n    var diff = options.maxLength - len;\r\n    var pad = repeat('0', diff);\r\n    val = (dash + pad + str);\r\n  }\r\n  if (options.stringify) {\r\n    return String(val);\r\n  }\r\n  return val;\r\n}\r\n\r\nfunction toNumber(val) {\r\n  return Number(val) || 0;\r\n}\r\n\r\nfunction isPadded(str) {\r\n  return /^-?0\\d/.test(str);\r\n}\r\n\r\nfunction isValid(min, max) {\r\n  return (isValidNumber(min) || isValidLetter(min))\r\n      && (isValidNumber(max) || isValidLetter(max));\r\n}\r\n\r\nfunction isValidLetter(ch) {\r\n  return typeof ch === 'string' && ch.length === 1 && /^\\w+$/.test(ch);\r\n}\r\n\r\nfunction isValidNumber(n) {\r\n  return isNumber(n) && !/\\./.test(n);\r\n}\r\n\r\n/**\r\n * Expose `fillRange`\r\n * @type {Function}\r\n */\r\n\r\nmodule.exports = fillRange;\r\n"]},"metadata":{},"sourceType":"script"}