{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liliana\\\\Documents\\\\AFinalUpdate\\\\team05_unr_react_app\\\\src\\\\components\\\\GraphDisplay.js\";\nimport React from \"react\";\nimport BarGraph from \"./graphComponents/BarGraph\";\nexport default class GraphDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphName: this.props.graphName,\n      numPred: this.props.numPred,\n      graphType: this.props.graphType,\n      predFrequency: this.props.predFrequency,\n      showTable: this.props.showTable,\n      from: this.props.from\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/getNewGraph', {\n      method: 'GET',\n      headers: {\n        'graphName': this.state.graphName,\n        'numPred': this.state.numPred,\n        'graphType': this.state.graphType,\n        'predFrequency': this.state.predFrequency,\n        'from': this.state.from\n      }\n    }).then(res => res.json()).then(jsonResponse => {\n      this.setState({\n        labels: jsonResponse.labels.json,\n        dataLabel: jsonResponse.dataLabel,\n        data: jsonResponse.data,\n        colors: jsonResponse.colors,\n        legendPosition: jsonResponse.legendPosition,\n        title: jsonResponse.title,\n        xAxisLabel: jsonResponse.xAxisLabel,\n        yAxisLabel: jsonResponse.yAxisLabel,\n        showLegend: jsonResponse.showLegend\n      });\n    }).catch(function (error) {\n      console.log('There has been a problem with your fetch operation: ' + error.message);\n      throw error;\n    });\n  }\n\n  render() {\n    var chartData = {\n      labels: ['Boston', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],\n      datasets: [{\n        label: 'Population',\n        data: [617594, 181045, 153060, 106519, 105162, 95072],\n        backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n      }]\n    };\n    var chartData2 = {\n      labels: this.state.labels,\n      dataSet: [{\n        label: this.state.label,\n        data: this.state.data,\n        backgroundColor: this.state.colors\n      }]\n    };\n    console.log(chartData2);\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        alignContent: 'center',\n        paddingTop: '130px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(BarGraph, {\n      chartData: chartData2,\n      legendPosition: \"right\",\n      title: \"title\",\n      xAxisLabel: \"x\",\n      yAxisLabel: \"y\",\n      showLegend: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.state.colors[1]);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Liliana/Documents/AFinalUpdate/team05_unr_react_app/src/components/GraphDisplay.js"],"names":["React","BarGraph","GraphDisplay","Component","constructor","props","state","graphName","numPred","graphType","predFrequency","showTable","from","componentDidMount","fetch","method","headers","then","res","json","jsonResponse","setState","labels","dataLabel","data","colors","legendPosition","title","xAxisLabel","yAxisLabel","showLegend","catch","error","console","log","message","render","chartData","datasets","label","backgroundColor","chartData2","dataSet","textAlign","alignContent","paddingTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport BarGraph from \"./graphComponents/BarGraph\";\r\n\r\nexport default class GraphDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            graphName: this.props.graphName,\r\n            numPred: this.props.numPred,\r\n            graphType: this.props.graphType,\r\n            predFrequency: this.props.predFrequency,\r\n            showTable: this.props.showTable,\r\n            from: this.props.from,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://localhost:8080/getNewGraph', {\r\n            method: 'GET',\r\n            headers: {\r\n                'graphName': this.state.graphName,\r\n                'numPred': this.state.numPred,\r\n                'graphType': this.state.graphType,\r\n                'predFrequency': this.state.predFrequency,\r\n                'from': this.state.from,\r\n            }})\r\n            .then(res => res.json())\r\n            .then(jsonResponse => {\r\n                this.setState({\r\n                    labels: jsonResponse.labels.json,\r\n                    dataLabel: jsonResponse.dataLabel,\r\n                    data:jsonResponse.data,\r\n                    colors: jsonResponse.colors,\r\n                    legendPosition: jsonResponse.legendPosition,\r\n                    title : jsonResponse.title,\r\n                    xAxisLabel: jsonResponse.xAxisLabel,\r\n                    yAxisLabel: jsonResponse.yAxisLabel,\r\n                    showLegend: jsonResponse.showLegend\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.log('There has been a problem with your fetch operation: ' + error.message);\r\n                throw error;\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var      chartData = {\r\n            labels: ['Boston', 'Worcester', 'Springfield', 'Lowell', 'Cambridge', 'New Bedford'],\r\n            datasets:[\r\n                {\r\n                    label:'Population',\r\n                    data:[\r\n                        617594,\r\n                        181045,\r\n                        153060,\r\n                        106519,\r\n                        105162,\r\n                        95072\r\n                    ],\r\n                    backgroundColor:[\r\n                        'rgba(255, 99, 132, 0.6)',\r\n                        'rgba(54, 162, 235, 0.6)',\r\n                        'rgba(255, 206, 86, 0.6)',\r\n                        'rgba(75, 192, 192, 0.6)',\r\n                        'rgba(153, 102, 255, 0.6)',\r\n                        'rgba(255, 159, 64, 0.6)',\r\n                        'rgba(255, 99, 132, 0.6)'\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n\r\n        var chartData2 = {\r\n            labels: this.state.labels,\r\n            dataSet: [\r\n                {\r\n                    label: this.state.label,\r\n                    data: this.state.data,\r\n                    backgroundColor: this.state.colors,\r\n                },\r\n            ]\r\n        }\r\n    \r\n        console.log(chartData2)\r\n        return(\r\n\r\n            <div style={{textAlign: 'center', alignContent:'center', paddingTop: '130px'}}>\r\n                   <BarGraph\r\n                       chartData = {chartData2}\r\n                       legendPosition = \"right\"\r\n                       title = \"title\"\r\n                       xAxisLabel = \"x\"\r\n                       yAxisLabel = \"y\"\r\n                       showLegend = {true}\r\n                   />\r\n                <br/>\r\n                   {this.state.colors[1]}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}