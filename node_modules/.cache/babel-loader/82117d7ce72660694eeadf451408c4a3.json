{"ast":null,"code":"'use strict';\n\nvar typeOf = require('kind-of');\n\nvar copyDescriptor = require('copy-descriptor');\n\nvar define = require('define-property');\n/**\r\n * Copy static properties, prototype properties, and descriptors from one object to another.\r\n *\r\n * ```js\r\n * function App() {}\r\n * var proto = App.prototype;\r\n * App.prototype.set = function() {};\r\n * App.prototype.get = function() {};\r\n *\r\n * var obj = {};\r\n * copy(obj, proto);\r\n * ```\r\n * @param {Object} `receiver`\r\n * @param {Object} `provider`\r\n * @param {String|Array} `omit` One or more properties to omit\r\n * @return {Object}\r\n * @api public\r\n */\n\n\nfunction copy(receiver, provider, omit) {\n  if (!isObject(receiver)) {\n    throw new TypeError('expected receiving object to be an object.');\n  }\n\n  if (!isObject(provider)) {\n    throw new TypeError('expected providing object to be an object.');\n  }\n\n  var props = nativeKeys(provider);\n  var keys = Object.keys(provider);\n  var len = props.length;\n  omit = arrayify(omit);\n\n  while (len--) {\n    var key = props[len];\n\n    if (has(keys, key)) {\n      define(receiver, key, provider[key]);\n    } else if (!(key in receiver) && !has(omit, key)) {\n      copyDescriptor(receiver, provider, key);\n    }\n  }\n}\n\n;\n/**\r\n * Return true if the given value is an object or function\r\n */\n\nfunction isObject(val) {\n  return typeOf(val) === 'object' || typeof val === 'function';\n}\n/**\r\n * Returns true if an array has any of the given elements, or an\r\n * object has any of the give keys.\r\n *\r\n * ```js\r\n * has(['a', 'b', 'c'], 'c');\r\n * //=> true\r\n *\r\n * has(['a', 'b', 'c'], ['c', 'z']);\r\n * //=> true\r\n *\r\n * has({a: 'b', c: 'd'}, ['c', 'z']);\r\n * //=> true\r\n * ```\r\n * @param {Object} `obj`\r\n * @param {String|Array} `val`\r\n * @return {Boolean}\r\n */\n\n\nfunction has(obj, val) {\n  val = arrayify(val);\n  var len = val.length;\n\n  if (isObject(obj)) {\n    for (var key in obj) {\n      if (val.indexOf(key) > -1) {\n        return true;\n      }\n    }\n\n    var keys = nativeKeys(obj);\n    return has(keys, val);\n  }\n\n  if (Array.isArray(obj)) {\n    var arr = obj;\n\n    while (len--) {\n      if (arr.indexOf(val[len]) > -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  throw new TypeError('expected an array or object.');\n}\n/**\r\n * Cast the given value to an array.\r\n *\r\n * ```js\r\n * arrayify('foo');\r\n * //=> ['foo']\r\n *\r\n * arrayify(['foo']);\r\n * //=> ['foo']\r\n * ```\r\n *\r\n * @param {String|Array} `val`\r\n * @return {Array}\r\n */\n\n\nfunction arrayify(val) {\n  return val ? Array.isArray(val) ? val : [val] : [];\n}\n/**\r\n * Returns true if a value has a `contructor`\r\n *\r\n * ```js\r\n * hasConstructor({});\r\n * //=> true\r\n *\r\n * hasConstructor(Object.create(null));\r\n * //=> false\r\n * ```\r\n * @param  {Object} `value`\r\n * @return {Boolean}\r\n */\n\n\nfunction hasConstructor(val) {\n  return isObject(val) && typeof val.constructor !== 'undefined';\n}\n/**\r\n * Get the native `ownPropertyNames` from the constructor of the\r\n * given `object`. An empty array is returned if the object does\r\n * not have a constructor.\r\n *\r\n * ```js\r\n * nativeKeys({a: 'b', b: 'c', c: 'd'})\r\n * //=> ['a', 'b', 'c']\r\n *\r\n * nativeKeys(function(){})\r\n * //=> ['length', 'caller']\r\n * ```\r\n *\r\n * @param  {Object} `obj` Object that has a `constructor`.\r\n * @return {Array} Array of keys.\r\n */\n\n\nfunction nativeKeys(val) {\n  if (!hasConstructor(val)) return [];\n  return Object.getOwnPropertyNames(val);\n}\n/**\r\n * Expose `copy`\r\n */\n\n\nmodule.exports = copy;\n/**\r\n * Expose `copy.has` for tests\r\n */\n\nmodule.exports.has = has;","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/object-copy/index.js"],"names":["typeOf","require","copyDescriptor","define","copy","receiver","provider","omit","isObject","TypeError","props","nativeKeys","keys","Object","len","length","arrayify","key","has","val","obj","indexOf","Array","isArray","arr","hasConstructor","constructor","getOwnPropertyNames","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar typeOf = require('kind-of');\r\nvar copyDescriptor = require('copy-descriptor');\r\nvar define = require('define-property');\r\n\r\n/**\r\n * Copy static properties, prototype properties, and descriptors from one object to another.\r\n *\r\n * ```js\r\n * function App() {}\r\n * var proto = App.prototype;\r\n * App.prototype.set = function() {};\r\n * App.prototype.get = function() {};\r\n *\r\n * var obj = {};\r\n * copy(obj, proto);\r\n * ```\r\n * @param {Object} `receiver`\r\n * @param {Object} `provider`\r\n * @param {String|Array} `omit` One or more properties to omit\r\n * @return {Object}\r\n * @api public\r\n */\r\n\r\nfunction copy(receiver, provider, omit) {\r\n  if (!isObject(receiver)) {\r\n    throw new TypeError('expected receiving object to be an object.');\r\n  }\r\n  if (!isObject(provider)) {\r\n    throw new TypeError('expected providing object to be an object.');\r\n  }\r\n\r\n  var props = nativeKeys(provider);\r\n  var keys = Object.keys(provider);\r\n  var len = props.length;\r\n  omit = arrayify(omit);\r\n\r\n  while (len--) {\r\n    var key = props[len];\r\n\r\n    if (has(keys, key)) {\r\n      define(receiver, key, provider[key]);\r\n    } else if (!(key in receiver) && !has(omit, key)) {\r\n      copyDescriptor(receiver, provider, key);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Return true if the given value is an object or function\r\n */\r\n\r\nfunction isObject(val) {\r\n  return typeOf(val) === 'object' || typeof val === 'function';\r\n}\r\n\r\n/**\r\n * Returns true if an array has any of the given elements, or an\r\n * object has any of the give keys.\r\n *\r\n * ```js\r\n * has(['a', 'b', 'c'], 'c');\r\n * //=> true\r\n *\r\n * has(['a', 'b', 'c'], ['c', 'z']);\r\n * //=> true\r\n *\r\n * has({a: 'b', c: 'd'}, ['c', 'z']);\r\n * //=> true\r\n * ```\r\n * @param {Object} `obj`\r\n * @param {String|Array} `val`\r\n * @return {Boolean}\r\n */\r\n\r\nfunction has(obj, val) {\r\n  val = arrayify(val);\r\n  var len = val.length;\r\n\r\n  if (isObject(obj)) {\r\n    for (var key in obj) {\r\n      if (val.indexOf(key) > -1) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    var keys = nativeKeys(obj);\r\n    return has(keys, val);\r\n  }\r\n\r\n  if (Array.isArray(obj)) {\r\n    var arr = obj;\r\n    while (len--) {\r\n      if (arr.indexOf(val[len]) > -1) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  throw new TypeError('expected an array or object.');\r\n}\r\n\r\n/**\r\n * Cast the given value to an array.\r\n *\r\n * ```js\r\n * arrayify('foo');\r\n * //=> ['foo']\r\n *\r\n * arrayify(['foo']);\r\n * //=> ['foo']\r\n * ```\r\n *\r\n * @param {String|Array} `val`\r\n * @return {Array}\r\n */\r\n\r\nfunction arrayify(val) {\r\n  return val ? (Array.isArray(val) ? val : [val]) : [];\r\n}\r\n\r\n/**\r\n * Returns true if a value has a `contructor`\r\n *\r\n * ```js\r\n * hasConstructor({});\r\n * //=> true\r\n *\r\n * hasConstructor(Object.create(null));\r\n * //=> false\r\n * ```\r\n * @param  {Object} `value`\r\n * @return {Boolean}\r\n */\r\n\r\nfunction hasConstructor(val) {\r\n  return isObject(val) && typeof val.constructor !== 'undefined';\r\n}\r\n\r\n/**\r\n * Get the native `ownPropertyNames` from the constructor of the\r\n * given `object`. An empty array is returned if the object does\r\n * not have a constructor.\r\n *\r\n * ```js\r\n * nativeKeys({a: 'b', b: 'c', c: 'd'})\r\n * //=> ['a', 'b', 'c']\r\n *\r\n * nativeKeys(function(){})\r\n * //=> ['length', 'caller']\r\n * ```\r\n *\r\n * @param  {Object} `obj` Object that has a `constructor`.\r\n * @return {Array} Array of keys.\r\n */\r\n\r\nfunction nativeKeys(val) {\r\n  if (!hasConstructor(val)) return [];\r\n  return Object.getOwnPropertyNames(val);\r\n}\r\n\r\n/**\r\n * Expose `copy`\r\n */\r\n\r\nmodule.exports = copy;\r\n\r\n/**\r\n * Expose `copy.has` for tests\r\n */\r\n\r\nmodule.exports.has = has;\r\n"]},"metadata":{},"sourceType":"script"}