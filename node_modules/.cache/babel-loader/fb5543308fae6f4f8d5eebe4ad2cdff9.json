{"ast":null,"code":"/*!\r\n * get-value <https://github.com/jonschlinkert/get-value>\r\n *\r\n * Copyright (c) 2014-2015, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\nmodule.exports = function (obj, prop, a, b, c) {\n  if (!isObject(obj) || !prop) {\n    return obj;\n  }\n\n  prop = toString(prop); // allowing for multiple properties to be passed as\n  // a string or array, but much faster (3-4x) than doing\n  // `[].slice.call(arguments)`\n\n  if (a) prop += '.' + toString(a);\n  if (b) prop += '.' + toString(b);\n  if (c) prop += '.' + toString(c);\n\n  if (prop in obj) {\n    return obj[prop];\n  }\n\n  var segs = prop.split('.');\n  var len = segs.length;\n  var i = -1;\n\n  while (obj && ++i < len) {\n    var key = segs[i];\n\n    while (key[key.length - 1] === '\\\\') {\n      key = key.slice(0, -1) + '.' + segs[++i];\n    }\n\n    obj = obj[key];\n  }\n\n  return obj;\n};\n\nfunction isObject(val) {\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\n}\n\nfunction toString(val) {\n  if (!val) return '';\n\n  if (Array.isArray(val)) {\n    return val.join('.');\n  }\n\n  return val;\n}","map":{"version":3,"sources":["C:/Users/lykam/Desktop/Senior Project/team05_react_app/node_modules/get-value/index.js"],"names":["module","exports","obj","prop","a","b","c","isObject","toString","segs","split","len","length","i","key","slice","val","Array","isArray","join"],"mappings":"AAAA;;;;;;AAOAA,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,IAAd,EAAoBC,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC5C,MAAI,CAACC,QAAQ,CAACL,GAAD,CAAT,IAAkB,CAACC,IAAvB,EAA6B;AAC3B,WAAOD,GAAP;AACD;;AAEDC,EAAAA,IAAI,GAAGK,QAAQ,CAACL,IAAD,CAAf,CAL4C,CAO5C;AACA;AACA;;AACA,MAAIC,CAAJ,EAAOD,IAAI,IAAI,MAAMK,QAAQ,CAACJ,CAAD,CAAtB;AACP,MAAIC,CAAJ,EAAOF,IAAI,IAAI,MAAMK,QAAQ,CAACH,CAAD,CAAtB;AACP,MAAIC,CAAJ,EAAOH,IAAI,IAAI,MAAMK,QAAQ,CAACF,CAAD,CAAtB;;AAEP,MAAIH,IAAI,IAAID,GAAZ,EAAiB;AACf,WAAOA,GAAG,CAACC,IAAD,CAAV;AACD;;AAED,MAAIM,IAAI,GAAGN,IAAI,CAACO,KAAL,CAAW,GAAX,CAAX;AACA,MAAIC,GAAG,GAAGF,IAAI,CAACG,MAAf;AACA,MAAIC,CAAC,GAAG,CAAC,CAAT;;AAEA,SAAOX,GAAG,IAAK,EAAEW,CAAF,GAAMF,GAArB,EAA2B;AACzB,QAAIG,GAAG,GAAGL,IAAI,CAACI,CAAD,CAAd;;AACA,WAAOC,GAAG,CAACA,GAAG,CAACF,MAAJ,GAAa,CAAd,CAAH,KAAwB,IAA/B,EAAqC;AACnCE,MAAAA,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,IAAmB,GAAnB,GAAyBN,IAAI,CAAC,EAAEI,CAAH,CAAnC;AACD;;AACDX,IAAAA,GAAG,GAAGA,GAAG,CAACY,GAAD,CAAT;AACD;;AACD,SAAOZ,GAAP;AACD,CA9BD;;AAgCA,SAASK,QAAT,CAAkBS,GAAlB,EAAuB;AACrB,SAAOA,GAAG,KAAK,IAAR,KAAiB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA3D,CAAP;AACD;;AAED,SAASR,QAAT,CAAkBQ,GAAlB,EAAuB;AACrB,MAAI,CAACA,GAAL,EAAU,OAAO,EAAP;;AACV,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACtB,WAAOA,GAAG,CAACG,IAAJ,CAAS,GAAT,CAAP;AACD;;AACD,SAAOH,GAAP;AACD","sourcesContent":["/*!\r\n * get-value <https://github.com/jonschlinkert/get-value>\r\n *\r\n * Copyright (c) 2014-2015, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nmodule.exports = function(obj, prop, a, b, c) {\r\n  if (!isObject(obj) || !prop) {\r\n    return obj;\r\n  }\r\n\r\n  prop = toString(prop);\r\n\r\n  // allowing for multiple properties to be passed as\r\n  // a string or array, but much faster (3-4x) than doing\r\n  // `[].slice.call(arguments)`\r\n  if (a) prop += '.' + toString(a);\r\n  if (b) prop += '.' + toString(b);\r\n  if (c) prop += '.' + toString(c);\r\n\r\n  if (prop in obj) {\r\n    return obj[prop];\r\n  }\r\n\r\n  var segs = prop.split('.');\r\n  var len = segs.length;\r\n  var i = -1;\r\n\r\n  while (obj && (++i < len)) {\r\n    var key = segs[i];\r\n    while (key[key.length - 1] === '\\\\') {\r\n      key = key.slice(0, -1) + '.' + segs[++i];\r\n    }\r\n    obj = obj[key];\r\n  }\r\n  return obj;\r\n};\r\n\r\nfunction isObject(val) {\r\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\r\n}\r\n\r\nfunction toString(val) {\r\n  if (!val) return '';\r\n  if (Array.isArray(val)) {\r\n    return val.join('.');\r\n  }\r\n  return val;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}