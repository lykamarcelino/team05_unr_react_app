{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liliana\\\\Documents\\\\AFinalUpdate\\\\team05_unr_react_app\\\\src\\\\components\\\\GraphDisplay.js\";\nimport React from \"react\";\nexport default class GraphDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphName: this.props.graphName,\n      numPred: this.props.numPred,\n      graphType: this.props.graphType,\n      predFrequency: this.props.predFrequency,\n      showTable: this.props.showTable,\n      from: this.props.from\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/getNewGraph', {\n      method: 'GET',\n      headers: {\n        'graphName': this.state.graphName,\n        'numPred': this.state.numPred,\n        'graphType': this.state.graphType,\n        'predFrequency': this.state.predFrequency,\n        'from': this.state.from\n      }\n    }).then(res => res.json()).then(jsonResponse => {\n      console.log(this.state);\n      this.setState({\n        labels: jsonResponse.labels.json,\n        dataLabel: jsonResponse.dataLabel,\n        data: jsonResponse.data,\n        colors: jsonResponse.colors,\n        legendPosition: jsonResponse.legendPosition,\n        title: jsonResponse.title,\n        xAxisLabel: jsonResponse.xAxisLabel,\n        yAxisLabel: jsonResponse.yAxisLabel,\n        showLegend: jsonResponse.showLegend\n      }, console.log(this.state));\n    }).catch(function (error) {\n      console.log('There has been a problem with your fetch operation: ' + error.message);\n      throw error;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        alignContent: 'center',\n        paddingTop: '130px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"hello\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Liliana/Documents/AFinalUpdate/team05_unr_react_app/src/components/GraphDisplay.js"],"names":["React","GraphDisplay","Component","constructor","props","state","graphName","numPred","graphType","predFrequency","showTable","from","componentDidMount","fetch","method","headers","then","res","json","jsonResponse","console","log","setState","labels","dataLabel","data","colors","legendPosition","title","xAxisLabel","yAxisLabel","showLegend","catch","error","message","render","textAlign","alignContent","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SADb;AAETC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAFX;AAGTC,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAHb;AAITC,MAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWK,aAJjB;AAKTC,MAAAA,SAAS,EAAE,KAAKN,KAAL,CAAWM,SALb;AAMTC,MAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO;AANR,KAAb;AAQH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACvCC,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACL,qBAAa,KAAKV,KAAL,CAAWC,SADnB;AAEL,mBAAW,KAAKD,KAAL,CAAWE,OAFjB;AAGL,qBAAa,KAAKF,KAAL,CAAWG,SAHnB;AAIL,yBAAiB,KAAKH,KAAL,CAAWI,aAJvB;AAKL,gBAAQ,KAAKJ,KAAL,CAAWM;AALd;AAF8B,KAAtC,CAAL,CASKK,IATL,CASUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATjB,EAUKF,IAVL,CAUUG,YAAY,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;AACA,WAAKiB,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAEJ,YAAY,CAACI,MAAb,CAAoBL,IADlB;AAEVM,QAAAA,SAAS,EAAEL,YAAY,CAACK,SAFd;AAGVC,QAAAA,IAAI,EAACN,YAAY,CAACM,IAHR;AAIVC,QAAAA,MAAM,EAAEP,YAAY,CAACO,MAJX;AAKVC,QAAAA,cAAc,EAAER,YAAY,CAACQ,cALnB;AAMVC,QAAAA,KAAK,EAAGT,YAAY,CAACS,KANX;AAOVC,QAAAA,UAAU,EAAEV,YAAY,CAACU,UAPf;AAQVC,QAAAA,UAAU,EAAEX,YAAY,CAACW,UARf;AASVC,QAAAA,UAAU,EAAEZ,YAAY,CAACY;AATf,OAAd,EAWAX,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB,CAXA;AAaH,KAzBL,EA0BK2B,KA1BL,CA0BW,UAASC,KAAT,EAAgB;AACnBb,MAAAA,OAAO,CAACC,GAAR,CAAY,yDAAyDY,KAAK,CAACC,OAA3E;AACA,YAAMD,KAAN;AACH,KA7BL;AA8BH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WAEI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,YAAY,EAAC,QAAnC;AAA6CC,QAAAA,UAAU,EAAE;AAAzD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,CAFJ;AAOH;;AArDqD","sourcesContent":["import React from \"react\";\r\n\r\nexport default class GraphDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            graphName: this.props.graphName,\r\n            numPred: this.props.numPred,\r\n            graphType: this.props.graphType,\r\n            predFrequency: this.props.predFrequency,\r\n            showTable: this.props.showTable,\r\n            from: this.props.from,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://localhost:8080/getNewGraph', {\r\n            method: 'GET',\r\n            headers: {\r\n                'graphName': this.state.graphName,\r\n                'numPred': this.state.numPred,\r\n                'graphType': this.state.graphType,\r\n                'predFrequency': this.state.predFrequency,\r\n                'from': this.state.from,\r\n            }})\r\n            .then(res => res.json())\r\n            .then(jsonResponse => {\r\n                console.log(this.state)\r\n                this.setState({\r\n                    labels: jsonResponse.labels.json,\r\n                    dataLabel: jsonResponse.dataLabel,\r\n                    data:jsonResponse.data,\r\n                    colors: jsonResponse.colors,\r\n                    legendPosition: jsonResponse.legendPosition,\r\n                    title : jsonResponse.title,\r\n                    xAxisLabel: jsonResponse.xAxisLabel,\r\n                    yAxisLabel: jsonResponse.yAxisLabel,\r\n                    showLegend: jsonResponse.showLegend\r\n                },\r\n                console.log(this.state\r\n                ))\r\n            })\r\n            .catch(function(error) {\r\n                console.log('There has been a problem with your fetch operation: ' + error.message);\r\n                throw error;\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n\r\n            <div style={{textAlign: 'center', alignContent:'center', paddingTop: '130px'}}>\r\n               <text>hello</text>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}