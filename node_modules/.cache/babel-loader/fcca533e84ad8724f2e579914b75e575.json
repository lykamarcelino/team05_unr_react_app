{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liliana\\\\Documents\\\\AFinalUpdate\\\\team05_unr_react_app\\\\src\\\\components\\\\GraphDisplay.js\";\nimport React from \"react\";\nimport ShowGraph from \"./graphComponents/ShowGraph\";\nimport BarGraph from \"./graphComponents/BarGraph\";\nimport { Bar } from \"react-chartjs-2\";\nexport default class GraphDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      graphName: this.props.graphName,\n      numPred: this.props.numPred,\n      graphType: this.props.graphType,\n      predFrequency: this.props.predFrequency,\n      showTable: this.props.showTable,\n      from: this.props.from,\n      labels: null,\n      dataLabel: null,\n      data: null,\n      colors: null,\n      legendPosition: null,\n      title: null,\n      xAxisLabel: null,\n      yAxisLabel: null,\n      showLegend: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/getNewGraph', {\n      method: 'GET',\n      headers: {\n        'graphName': this.state.graphName,\n        'numPred': this.state.numPred,\n        'graphType': this.state.graphType,\n        'predFrequency': this.state.predFrequency,\n        'from': this.state.from\n      }\n    }).then(res => res.json()).then(jsonResponse => {\n      this.setState({\n        labels: jsonResponse.labels,\n        dataLabel: jsonResponse.dataLabel,\n        data: jsonResponse.data,\n        colors: jsonResponse.colors,\n        legendPosition: jsonResponse.legendPosition,\n        title: jsonResponse.title,\n        xAxisLabel: jsonResponse.xAxisLabel,\n        yAxisLabel: jsonResponse.yAxisLabel,\n        showLegend: jsonResponse.showLegend\n      });\n    }).catch(function (error) {\n      console.log('There has been a problem with your fetch operation: ' + error.message);\n      throw error;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'center',\n        alignContent: 'center',\n        paddingTop: '130px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(ShowGraph, {\n      graphName: this.props.graphName,\n      numPred: this.props.numPred,\n      graphType: this.props.graphType,\n      predFrequency: this.props.predFrequency,\n      showTable: this.props.showTable,\n      from: this.props.from,\n      labels: this.state.labels,\n      dataLabel: this.state.dataLabel,\n      data: this.state.data,\n      colors: this.state.colors,\n      legendPosition: this.state.legendPosition,\n      title: this.state.title,\n      xAxisLabel: this.state.xAxisLabel,\n      yAxisLabel: this.state.yAxisLabel,\n      showLegend: this.state.showLegend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Liliana/Documents/AFinalUpdate/team05_unr_react_app/src/components/GraphDisplay.js"],"names":["React","ShowGraph","BarGraph","Bar","GraphDisplay","Component","constructor","props","state","graphName","numPred","graphType","predFrequency","showTable","from","labels","dataLabel","data","colors","legendPosition","title","xAxisLabel","yAxisLabel","showLegend","componentDidMount","fetch","method","headers","then","res","json","jsonResponse","setState","catch","error","console","log","message","render","textAlign","alignContent","paddingTop"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ShowGraph from \"./graphComponents/ShowGraph\";\r\n\r\nimport BarGraph from \"./graphComponents/BarGraph\";\r\nimport {Bar} from \"react-chartjs-2\";\r\n\r\nexport default class GraphDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            graphName: this.props.graphName,\r\n            numPred: this.props.numPred,\r\n            graphType: this.props.graphType,\r\n            predFrequency: this.props.predFrequency,\r\n            showTable: this.props.showTable,\r\n            from: this.props.from,\r\n            labels: null,\r\n            dataLabel: null,\r\n            data: null,\r\n            colors: null,\r\n            legendPosition: null,\r\n            title: null,\r\n            xAxisLabel: null,\r\n            yAxisLabel: null,\r\n            showLegend: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:8080/getNewGraph', {\r\n            method: 'GET',\r\n            headers: {\r\n                'graphName': this.state.graphName,\r\n                'numPred': this.state.numPred,\r\n                'graphType': this.state.graphType,\r\n                'predFrequency': this.state.predFrequency,\r\n                'from': this.state.from,\r\n            }})\r\n            .then(res => res.json())\r\n            .then(jsonResponse => {\r\n                this.setState({\r\n                    labels: jsonResponse.labels,\r\n                    dataLabel: jsonResponse.dataLabel,\r\n                    data:jsonResponse.data,\r\n                    colors: jsonResponse.colors,\r\n                    legendPosition: jsonResponse.legendPosition,\r\n                    title : jsonResponse.title,\r\n                    xAxisLabel: jsonResponse.xAxisLabel,\r\n                    yAxisLabel: jsonResponse.yAxisLabel,\r\n                    showLegend: jsonResponse.showLegend\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.log('There has been a problem with your fetch operation: ' + error.message);\r\n                throw error;\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={{textAlign: 'center', alignContent:'center', paddingTop: '130px'}}>\r\n                <ShowGraph\r\n                    graphName = {this.props.graphName}\r\n                    numPred = {this.props.numPred}\r\n                    graphType = {this.props.graphType}\r\n                    predFrequency = {this.props.predFrequency}\r\n                    showTable = {this.props.showTable}\r\n                    from = {this.props.from}\r\n                    labels = {this.state.labels}\r\n                    dataLabel = {this.state.dataLabel}\r\n                    data = {this.state.data}\r\n                    colors = {this.state.colors}\r\n                    legendPosition = {this.state.legendPosition}\r\n                    title = {this.state.title}\r\n                    xAxisLabel = {this.state.xAxisLabel}\r\n                    yAxisLabel = {this.state. yAxisLabel}\r\n                    showLegend = {this.state.showLegend}\r\n                />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}